#!/usr/bin/env ruby
# cat macbeth.xml | xargs -0 ./lc

require 'nokogiri'

get_speakers =->(doc) {
  doc.search('SPEAKER').map(&:text).uniq
}

get_lines =->(doc) {
  doc.search('SPEECH').map do |s|
    { name:  s.at('SPEAKER').text, 
      lines: s.search('LINE').map(&:text) }
  end
}

count_lines =->(name, lines) {
  lines.select     {|l|         l[:name] == name    }.
        reduce([]) {|acc, line| acc << line[:lines] }.
        flatten.count
}

aggregate =->(speakers, lines) {
  speakers.map do |name|
    { name:  name,
      count: count_lines.(name, lines) }
  end
}

sort_desc =->(list) {
  list.sort {|a,b| b[:count] <=> a[:count] }
}

formatted =->(list) {
  list.map{|s| [s[:count], "\t", s[:name]].join }.
       join("\n") 
}

doc      = Nokogiri::XML(ARGV[0])
speakers = get_speakers.(doc)
lines    = get_lines.(doc)

puts formatted.(
       sort_desc.(
         aggregate.( speakers, lines ) ) )
