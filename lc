#!/usr/bin/env ruby
# cat macbeth.xml | xargs -0 ./lc

require 'nokogiri'

class Actor < Struct.new(:name, :lines)
  def line_count
    lines.count
  end
end

class Play
  def initialize(xml)
    @doc = parse_xml(xml)
  end

  def actors
    @actors ||= doc.search('SPEAKER').map(&:text).uniq
  end

  def dialogs
    @dialogs ||= doc.search('SPEECH').map do |s|
      Actor.new(s.at('SPEAKER').text, s.search('LINE').map(&:text))
    end
  end

  def lines_for(name)
    dialogs.select {|s| s.name == name }.
            map(&:lines).
            flatten
  end

  def aggregated_lines
    actors.map do |name|
      Actor.new(name, lines_for(name))
    end
  end

  def sorted_line_counts
    aggregated_lines.sort {|a,b| b.line_count <=> a.line_count }
  end

private
  attr_reader :doc

  def parse_xml(xml)
    Nokogiri::XML(xml)
  end

end

Play.new(ARGV[0]).sorted_line_counts.each do |actor| 
  puts [actor.line_count, "\t", actor.name, "\n"].join
end
